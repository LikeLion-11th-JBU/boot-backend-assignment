Docker의 기초

Docker - 컴테이너 개념을 활용한 가상화 기술의 일종 (OS 위에 컨테이너를 올려 에플리케이션을 활용한다. 즉 컨테이너 형태로 담은것을 도커라는 배를 타고 os위에 떠다닐 수 있다.)

전통적인 가상화 기술
Hardware > Host OS > Hypervisor > (Guset OS > 라이브러리 > Application )의 형태로 구성

Docker의 컨터이너 기반의 가상화
Hardware > Host OS > 컨테이너 (라이브러리 > Application)

=> 이전의 가상화 기술에 비해 훨씬 가볍고 빠르고 다루기도 쉽다. 

도커 앤진 : Host OS의 소프트웨어의 일종

Docker가 필요한 이유 - 서로 다른 소프트웨어가 서로 다른 하드웨어나 OS에 올라갈 때 설정들이 다르기 때문에 하나하나 설치를 하면서 OS별로 생기는 문제들을 다루기는 힘들기 떄문이다. 즉 어플리케이션 개발에 필요한 다양한 소프트웨어의 설치를 간소화 해준다. 

docker --help : Docker의 어떤 명령어를 사용할 수 있는지 확인할 수 있다.

docker --version : 버전 확인

docker run -d -p 80:80 docker/getting-started : 간단한 이미지를 받고 사용하기 
docker : Docker Daemon에 요청을 보낸다.
run : 컨테이너를 실행한다.
-d : Detached, 컨테이너를 background에서 실행하는 옵션
-p : port, 컨테이너의 포트를 물리 서버의 포트와 연결한다.
docker/getting-started : 컨테이너로 실행할 이미지의 이름

docker rm -f : 연결 끊기
